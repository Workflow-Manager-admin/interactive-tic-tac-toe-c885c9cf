{"is_source_file": true, "format": "Python", "description": "This file contains the implementation of the core game logic for a Tic Tac Toe game, including the game state management, move validation, win/draw detection, and reset functionality. It defines the GameState class with thread-safe methods to manipulate and retrieve the game state.", "external_files": [], "external_methods": ["threading.Lock"], "published": ["game_state"], "classes": [{"name": "GameState", "description": "An in-memory, thread-safe representation of a Tic Tac Toe game, managing the board, current player, win/draw status, and game resets."}], "methods": [{"name": "GameState.__init__", "description": "Initializes a new game state object, setting up the lock and resetting game parameters."}, {"name": "GameState.reset", "description": "Resets the game board, current player, winner, draw status, move count, and activity status to start a new game."}, {"name": "GameState.get_state", "description": "Returns the current game state as a dictionary, including the board, current player, winner, draw status, activity status, and move count."}, {"name": "GameState.make_move", "description": "Attempts to make a move for the current player at the specified row and column, updates game state accordingly, and returns the new state or an error message."}, {"name": "GameState._check_winner", "description": "Internal method to check if the specified player has won the game based on current board state."}, {"name": "__init__(self)", "scope": "GameState", "scopeKind": "class", "description": "unavailable"}, {"name": "bool _check_winner(self, player: str)", "scope": "GameState", "scopeKind": "class", "description": "unavailable"}, {"name": "Dict[str,Any] get_state(self)", "scope": "GameState", "scopeKind": "class", "description": "unavailable"}, {"name": "Dict[str,Any] make_move(self, row: int, col: int)", "scope": "GameState", "scopeKind": "class", "description": "unavailable"}, {"name": "reset(self)", "scope": "GameState", "scopeKind": "class", "description": "unavailable"}], "calls": ["GameState._check_winner", "self._lock.acquire", "self._lock.release"], "search-terms": ["TicTacToe", "GameState", "thread-safe game management", "move validation", "win detection", "reset logic", "board state", "player turn tracking"], "state": 2, "file_id": 14, "knowledge_revision": 29, "git_revision": "", "ctags": [{"_type": "tag", "name": "GameState", "path": "/home/kavia/workspace/code-generation/interactive-tic-tac-toe-c885c9cf/backend/app/tictactoe.py", "pattern": "/^class GameState:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/interactive-tic-tac-toe-c885c9cf/backend/app/tictactoe.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "GameState", "scopeKind": "class"}, {"_type": "tag", "name": "_check_winner", "path": "/home/kavia/workspace/code-generation/interactive-tic-tac-toe-c885c9cf/backend/app/tictactoe.py", "pattern": "/^    def _check_winner(self, player: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, player: str)", "scope": "GameState", "scopeKind": "class"}, {"_type": "tag", "name": "game_state", "path": "/home/kavia/workspace/code-generation/interactive-tic-tac-toe-c885c9cf/backend/app/tictactoe.py", "pattern": "/^game_state = GameState()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_state", "path": "/home/kavia/workspace/code-generation/interactive-tic-tac-toe-c885c9cf/backend/app/tictactoe.py", "pattern": "/^    def get_state(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "GameState", "scopeKind": "class"}, {"_type": "tag", "name": "make_move", "path": "/home/kavia/workspace/code-generation/interactive-tic-tac-toe-c885c9cf/backend/app/tictactoe.py", "pattern": "/^    def make_move(self, row: int, col: int) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, row: int, col: int)", "scope": "GameState", "scopeKind": "class"}, {"_type": "tag", "name": "reset", "path": "/home/kavia/workspace/code-generation/interactive-tic-tac-toe-c885c9cf/backend/app/tictactoe.py", "pattern": "/^    def reset(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "GameState", "scopeKind": "class"}], "hash": "eb7ba199cfadbaa91c337d3b2e00accd", "format-version": 4, "code-base-name": "backend", "filename": "backend/app/tictactoe.py", "fields": [{"name": "game_state = GameState()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"29": ""}]}