{"is_source_file": true, "format": "Python", "description": "This file implements the core game logic for a Tic Tac Toe game, including game state management, move validation, win/draw detection, and reset functionality. It defines the GameState class with thread-safe methods to control and query the game state.", "external_files": [], "external_methods": ["threading.Lock"], "published": ["game_state"], "classes": [{"name": "GameState", "description": "In-memory representation of a Tic Tac Toe game, managing the game board, player turns, win/draw state, and reset functionality with thread safety."}], "methods": [{"name": "reset(self)", "description": "Resets the game to its initial state, clearing the board, resetting player turn, and game status flags.", "scope": "GameState", "scopeKind": "class"}, {"name": "Dict[str,Any] get_state(self)", "description": "Returns the current game state, including board configuration, current player, winner, draw status, activity status, and move count.", "scope": "GameState", "scopeKind": "class"}, {"name": "Dict[str,Any] make_move(self, row: int, col: int)", "description": "Processes a move at specified row and column for the current player, updates the game state, checks for win or draw, and switches turns.", "scope": "GameState", "scopeKind": "class"}, {"name": "bool _check_winner(self, player: str)", "description": "Internal method to check if the specified player has achieved a winning position on the board.", "scope": "GameState", "scopeKind": "class"}, {"name": "__init__(self)", "scope": "GameState", "scopeKind": "class", "description": "unavailable"}], "calls": ["self._lock.acquire()", "self._lock.release()", "self._check_winner(self.current_player)"], "search-terms": ["TicTacToe game logic", "thread-safe game state", "move validation", "win detection", "game reset"], "state": 2, "file_id": 14, "knowledge_revision": 35, "git_revision": "05746990185a46bebf18af81763dcdfd5f1ef175", "revision_history": [{"29": ""}, {"35": "05746990185a46bebf18af81763dcdfd5f1ef175"}], "ctags": [{"_type": "tag", "name": "GameState", "path": "/home/kavia/workspace/code-generation/interactive-tic-tac-toe-c885c9cf/backend/app/tictactoe.py", "pattern": "/^class GameState:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/interactive-tic-tac-toe-c885c9cf/backend/app/tictactoe.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "GameState", "scopeKind": "class"}, {"_type": "tag", "name": "_check_winner", "path": "/home/kavia/workspace/code-generation/interactive-tic-tac-toe-c885c9cf/backend/app/tictactoe.py", "pattern": "/^    def _check_winner(self, player: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, player: str)", "scope": "GameState", "scopeKind": "class"}, {"_type": "tag", "name": "game_state", "path": "/home/kavia/workspace/code-generation/interactive-tic-tac-toe-c885c9cf/backend/app/tictactoe.py", "pattern": "/^game_state = GameState()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_state", "path": "/home/kavia/workspace/code-generation/interactive-tic-tac-toe-c885c9cf/backend/app/tictactoe.py", "pattern": "/^    def get_state(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "GameState", "scopeKind": "class"}, {"_type": "tag", "name": "make_move", "path": "/home/kavia/workspace/code-generation/interactive-tic-tac-toe-c885c9cf/backend/app/tictactoe.py", "pattern": "/^    def make_move(self, row: int, col: int) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, row: int, col: int)", "scope": "GameState", "scopeKind": "class"}, {"_type": "tag", "name": "reset", "path": "/home/kavia/workspace/code-generation/interactive-tic-tac-toe-c885c9cf/backend/app/tictactoe.py", "pattern": "/^    def reset(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "GameState", "scopeKind": "class"}], "hash": "1553450abbb7fef6319b57765bcba723", "format-version": 4, "code-base-name": "backend", "filename": "backend/app/tictactoe.py", "fields": [{"name": "game_state = GameState()", "scope": "", "scopeKind": "", "description": "unavailable"}]}